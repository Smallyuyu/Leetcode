## 題目說明
[題目連結](https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/?envType=study-plan&id=algorithm-i)

Given the head of a linked list, remove the nth node from the end of the list and return its head.

**Example 1:**

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

**Example 2:**

Input: head = [1], n = 1
Output: []

**Constraints:**

The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz


## 思路一 遍歷
```CPP
class Solution {
public:
    int GetLength(ListNode* head){
        int length=0;
        while(head!=NULL){
            head=head->next;
            length++;
        }
        return length;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        struct ListNode *Stage1=new ListNode(0,head);
        struct ListNode *Stage2=Stage1;
        int length=GetLength(head);
        for(int i=0;i<length-n;i++){
            Stage2=Stage2->next;
        }
        Stage2->next=Stage2->next->next;
        struct ListNode *ans=Stage1->next;
        return ans;
    }
};
```
